report:
  name: reports.aws.ec2.security_groups
  description: This report provides information on EC2 security_groups across all regions and accounts.

  headers:
    - Active
    - Account
    - Region
    - Group
    - Vpc
    - EgressProtocol
    - EgressFrom
    - EgressTo
    - EgressIp4
    - EgressIp6
    - IngressProtocol
    - IngressFrom
    - IngressTo
    - IngressIp4
    - IngressIp6

  tasks:
    - mongo:
        name: get ec2 security groups
        silo: harvest-core
        collection: aws.ec2.security-groups
        filters: '.*'
        result_as: security_groups

        arguments:
          pipeline:
            - $unwind:
                path: "$IpPermissionsEgress.IpRanges.CidrIp"
                preserveNullAndEmptyArrays: true

            - $unwind:
                path: "$IpPermissionsEgress.IpRanges.CidrIpv6"
                preserveNullAndEmptyArrays: true

            - $unwind:
                path: "$IpPermissions.IpRanges.CidrIp"
                preserveNullAndEmptyArrays: true

            - $unwind:
                path: "$IpPermissions.IpRanges.CidrIpv6"
                preserveNullAndEmptyArrays: true

            - $project:
                Active: "$Harvest.Active"
                Account: "$Harvest.Account"
                Region: "$Harvest.Region"
                Group: "$GroupId"
                Name: "$GroupName"
                Vpc: "$VpcId"
                EgressProtocol: "$IpPermissionsEgress.IpProtocol"
                EgressFrom: "$IpPermissionsEgress.FromPort"
                EgressTo: "$IpPermissionsEgress.ToPort"
                EgressIp4: "$IpPermissionsEgress.IpRanges.CidrIp"
                EgressIp6: "$IpPermissionsEgress.Ipv6Ranges.CidrIpv6"
                IngressProtocol: "$IpPermissions.IpProtocol"
                IngressFrom: "$IpPermissions.FromPort"
                IngressTo: "$IpPermissions.ToPort"
                IngressIp4: "$IpPermissions.IpRanges.CidrIp"
                IngressIp6: "$IpPermissions.Ipv6Ranges.CidrIpv6"
